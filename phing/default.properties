;; =============================================================================
;; Default values for properties
;; =============================================================================
;;
;; You are supposed to override these properties in one of the following files:
;;
;; <repository_root>/../build.properties       Common across all of your projects (passwords, not committed to Git)
;; <repository_root>/build/build.properties    Public project properties (no passwords, committed to Git)
;; <repository_root>/build/override.properties Temporary overrides for testing (passwords, not committed to Git)

; ------------------------------------------------------------------------------
; Environment
; ------------------------------------------------------------------------------
; Path to the PHP CLI binary (or the name of the binary if its directory is already present in your PATH).
system.php_cli=php
; Set to 1 to use built-in PHP XSLTproc when generating documentation. Set to 0 to use the docs.xsltproc binary (default).
docs.php_xsltproc=1
; Path to the xsltproc binary
docs.xsltproc=xsltproc

; ------------------------------------------------------------------------------
; Language Package Builder
; ------------------------------------------------------------------------------
; The name of the software, used for building packages and available as [SOFTWARE]
langbuilder.software=Example Component
; The basename of the package files, used for building packages and available as [PACKAGENAME]
langbuilder.packagename=com_example
; Copyright holder of the package, used for building packages and available as [AUTHORNAME]
langbuilder.authorname=Acme Corp
; Site URL of the copyright holder of the package, used for building packages and available as [AUTHORURL]
langbuilder.authorurl=https://www.example.com
; Language file license, used for building packages and available as [LICENSE]
langbuilder.license=GNU GPLv3 or later
; Path, relative to the repository's root, where the prototype index.html can be found
langbuilder.protohtml=translations/_pages/index.html
; Other variables you can use in the index.html file:
; [DATE]       Last update timestamp (GMT)
; [YEAR]       Current year, meant for use in copyright headers
; [LANGTABLE]  The table of the language packages and their download links
; For further configuration please see entire S3 configuration section and s3.path in particular

; ------------------------------------------------------------------------------
; Amazon S3 configuration
; ------------------------------------------------------------------------------
; Amazon S3 access key. Generate an access/private pair through IAM.
s3.access=AXAXAXAXAXAXAXAXAXAX
; Amazon S3 private key
s3.private=abcdEfgh/iJklmnOpqrStuvWxYZ01234567890x0
; Amazon S3 bucket for public release files and updates
s3.bucket=mybucket
; Language files path relative to bucket's root
s3.path=language
; Amazon S3 directory where files are uploaded
s3.directory=downloads/phingtest
; CloudFront CDN for the Amazon S3 bucket
s3.cdnhostname=cdn.example.com
; Use HTTPS for the Amazon S3 REST API?
s3.tls = true
; Amazon S3 ACL for uploaded files
s3.acl=public-read
; Amazon S3 storage class for uploaded files
s3.storage_class=STANDARD
; Maximum cache age for uploaded files (in seconds)
s3.maximum_age=600

; ------------------------------------------------------------------------------
; SFTP Setup
; ------------------------------------------------------------------------------
; SFTP connection information
scp.host=sftp.example.com
scp.port=22
scp.username=myuser
scp.password=mypassword
; SFTP directory for the ARS repository root
scp.dir=/var/www/html
; SFTP directory for the DocImport public media folder
scp.dir.docs=/var/www/html/media/com_docimport

; ------------------------------------------------------------------------------
; SFTP deploy for dev releases
; ------------------------------------------------------------------------------
; SFTP Deploy patterns. Files matching these patterns will be uploaded when doing `phing ftpdeploy`
ftpdeploy.pattern.core=com_example-*-core.zip
ftpdeploy.pattern.pro=com_example-*-pro.zip

; SFTP Deploy paths. These are relative to scp.dir above.
ftpdeploy.path.core=files/dev/examplecore
ftpdeploy.path.pro=files/dev/examplepro

; ------------------------------------------------------------------------------
; Akeeba Release Maker workflow setup
; ------------------------------------------------------------------------------
; Release method: json (Release Maker 1.x/2.x, legacy), yaml (Release Maker 2.x) or github
release.method=json

; URL to the site hosting Akeeba Release System. IT'D BETTER BE HTTPS FOR SECURITY REASONS!
release.api.endpoint=https://www.example.com
; API connector (php or curl)
release.api.connector=php
; Super User username and password
release.api.username=admin
release.api.password=notsosecret
; Super User FOF Token
release.api.token=

; Akeeba Release Maker steps
release.steps = "prepare","deploy","release","items","publish","updates"
release.steps_update = "updates"

; ARS category for these downloads
release.category=1
; How should I deploy updates? sftp, s3
release.updatemethod=s3
; Joomla access level for the release
release.access=1
; Path for update XML and INI streams relative to bucket's root or the FTP/SFTP root folder
release.update_dir=updates

; --- CORE ----
; How should I release the Core version? ftp, sftp, s3
release.core.method=s3
; Relative path. It's relative either to s3.directory (s3) or scp.dir (sftp)
release.core.dir=downloads/akeebabackup
; Pattern for package files
release.core.pattern=com_*core.zip
; Update basename (without .xml extension)
release.core.update_basename=examplecore
; Update stream ID
release.core.update_stream=1
; Viewing Access Level for these files
release.core.access_level=1
; Update information formats to generate, Core version
release.core.update.formats="ini", "inibare", "xml"

; ---- PRO ----
; How should I release the Pro version? ftp, sftp, s3
release.pro.method=sftp
; Relative path
release.pro.dir=files/normal/examplepro
; Pattern for package files
release.pro.pattern=com_*pro.zip
; Update basename (without .xml extension)
release.pro.update.basename=examplepro
; Update stream ID
release.pro.update_stream=2
; Viewing Access Level for these files
release.pro.access_level=123
; Update information formats to generate, Pro version
release.pro.update.formats="ini", "inibare", "xml"

; ---- DOCUMENTATION ----
; Where should I upload the documentation? [core|pro]
release.docs.where=core
; Which files should I upload? Provide a list in JSON array format
release.docs.which=["my-docs", "other-docs", "whatever"]

; ------------------------------------------------------------------------------
; GitHub Releases setup
; ------------------------------------------------------------------------------
; The Git binary. Not necessary in common.xml but it's worth setting in my OS-specific build.properties file.
git.binary=/usr/bin/git
; The GitHub organization or user the repository is under
github.organization=foobar
; The GitHub repository name
github.repository=baz
; GitHub personal access token from https://github.com/settings/tokens
github.token=yourGitHubTokenHere

; ------------------------------------------------------------------------------
; Joomla! package building
; ------------------------------------------------------------------------------
; The name of the component, must be in the form something, NOT com_something!
build.component=example
; Do you have a Core / Pro version? If this is 0 only the Core release will be built
build.has_pro=1

; ------------------------------------------------------------------------------
; Others
; ------------------------------------------------------------------------------
; Relink site (Path to the site root where the relink task points to, also used for Blade precompilation)
build.relink_site=
